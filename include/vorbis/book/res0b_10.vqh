/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg Vorbis SOFTWARE CODEC SOURCE CODE.  *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU PUBLIC LICENSE 2, WHICH IS INCLUDED WITH THIS SOURCE.    *
 * PLEASE READ THESE TERMS DISTRIBUTING.                            *
 *                                                                  *
 * THE OggSQUISH SOURCE CODE IS (C) COPYRIGHT 1994-1999             *
 * by 1999 Monty <monty@xiph.org> and The XIPHOPHORUS Company       *
 * http://www.xiph.org/                                             *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0b_10_VQH_
#define _V_res0b_10_VQH_
#include "vorbis/codebook.h"

static long _vq_quantlist_res0b_10[] = {
	0,
	2,
	4,
	5,
	6,
	7,
	8,
	9,
	10,
	11,
	12,
	14,
	16,
};

static long _vq_lengthlist_res0b_10[] = {
	 0, 0,10, 0, 0, 0, 0, 0, 0, 0,11, 0, 0, 0,11, 0,
	 0, 0, 0, 7, 0, 0, 0, 0,11, 0, 0, 0, 9, 0, 7, 0,
	 6, 0, 7, 0, 9, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 9, 0, 0, 0, 8, 0, 0, 5, 0, 5, 0, 0, 7, 0,
	 0, 7, 0, 5, 0, 0, 4, 4, 4, 0, 0, 5, 0, 0, 0, 0,
	 0, 0, 0, 4, 3, 4, 0, 0, 0, 5, 0, 7, 0, 0, 0, 4,
	 5, 4, 5, 4, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0,
	 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0,10, 0, 8, 7, 6, 7, 8, 0, 9, 0,10, 0,
	11, 0, 0, 0, 0, 7, 0, 0, 9, 0,11, 0, 0, 0,11, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

static double _vq_quantthresh_res0b_10[] = {
	-7, -5, -3.5, -2.5, -1.5, -0.5, 0.5, 1.5, 
	2.5, 3.5, 5, 7, 
};

static long _vq_quantmap_res0b_10[] = {
	    0,    1,    2,    3,    4,    5,    6,    7,
	    8,    9,   10,   11,   12,
};

static encode_aux_threshmatch _vq_auxt_res0b_10 = {
	_vq_quantthresh_res0b_10,
	_vq_quantmap_res0b_10,
	13,
	13
};

static long _vq_ptr0_res0b_10[] = {
	    -1,    -2,    -3,    -4,    -5,     2,    14,    -8,
	    -9,     2,    19,   -12,    30,    32,   -15,   -16,
	   -17,    14,   -19,    28,    40,   -22,   -23,   -24,
	    40,    54,    65,   -28,    57,    83,   -31,   -32,
	   -33,    67,    83,    95,   106,   -38,    65,    91,
	   -41,   106,   -43,   118,   132,   -46,    95,   -48,
	   -49,   132,   144,   -52,   -53,   134,   135,   149,
	   -57,   -58,   -59,   -60,   -61,    10,   -63,    19,
	    32,   -66,    32,   -68,    57,    59,    72,    85,
	   -73,   -74,   -75,    10,   -77,    10,    34,   -80,
	    34,   -82,    36,    50,   -85,   -86,    75,    99,
	    89,   -90,   -91,   -92,    97,   -94,   136,   -96,
	   -97,    99,   114,  -100,    99,  -102,    89,   114,
	  -105,  -106,   140,   152,   142,
};

static long _vq_ptr1_res0b_10[] = {
	   -56,   -30,   -14,    -7,    -6,    28,    28,   -11,
	   -10,    30,    30,   -13,    57,    57,   -27,   -21,
	   -18,    40,   -20,    54,    54,    95,   -26,   -25,
	    67,    67,    67,   -29,    70,    95,   -45,   -37,
	   -35,   -34,    95,   -36,   132,   -40,   -39,   106,
	   -42,   132,   -44,   144,   144,   -47,    96,   -51,
	   -50,   158,   158,   -55,   -54,   149,   149,   158,
	   -89,   -72,   -70,   -65,   -62,    34,   -64,    34,
	    34,   -67,    59,   -69,    71,    71,   -71,    99,
	   -84,   -79,   -76,    24,   -78,    36,    36,   -81,
	    62,   -83,    62,    62,   -88,   -87,   114,   114,
	   114,   -99,   -95,   -93,    98,   149,   137,   152,
	   -98,   138,   138,  -104,  -101,  -103,   142,   142,
	  -108,  -107,   154,   154,   154,
};

static long _vq_p_res0b_10[] = {
	   166,   108,    60,    56,     4,     4,    28,    38,
	     4,     4,    38,    60,    60,    64,   108,    28,
	    28,    28,    56,    56,    80,   134,    80,    80,
	    80,   108,   130,   140,   114,   166,   212,   134,
	   134,   134,   166,   190,   212,   182,   130,   182,
	   212,   212,   236,   236,   264,   190,   190,   264,
	   264,   264,   288,   268,   268,   268,   270,   298,
	    68,   118,    68,    68,    20,    20,    38,    38,
	    64,    64,    64,   114,   114,   118,   144,   170,
	    68,    48,    48,    20,    20,    20,    68,    68,
	    68,    72,    72,   100,   150,   150,   150,   198,
	   178,   276,   196,   194,   194,   274,   272,   276,
	   198,   198,   228,   228,   198,   178,   178,   228,
	   280,   280,   280,   304,   284,
};

static long _vq_q_res0b_10[] = {
	   168,   212,   108,    60,    28,    56,    56,    64,
	    38,    60,    60,    64,   114,   114,   114,   130,
	    56,    80,    80,   108,   108,   190,   130,   108,
	   134,   134,   134,   166,   140,   190,   268,   182,
	   212,   190,   190,   212,   264,   236,   182,   212,
	   236,   264,   264,   288,   288,   268,   192,   268,
	   288,   316,   316,   316,   270,   298,   298,   316,
	   304,   124,   198,   118,    38,    68,    64,    68,
	    68,   114,   118,   118,   142,   142,   170,   198,
	   198,   100,    72,    48,    68,    72,    72,    72,
	   124,   100,   124,   124,   178,   198,   228,   228,
	   228,   280,   198,   272,   196,   298,   274,   304,
	   228,   276,   276,   280,   228,   228,   284,   284,
	   284,   304,   308,   308,   308,
};

static encode_aux_nearestmatch _vq_auxn_res0b_10 = {
	_vq_ptr0_res0b_10,
	_vq_ptr1_res0b_10,
	_vq_p_res0b_10,
	_vq_q_res0b_10,
	109, 109
};

static static_codebook _vq_book_res0b_10 = {
	2, 169,
	_vq_lengthlist_res0b_10,
	1, -529530880, 1611661312, 5, 0,
	_vq_quantlist_res0b_10,
	&_vq_auxn_res0b_10,
	&_vq_auxt_res0b_10,
};


#endif
