/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg Vorbis SOFTWARE CODEC SOURCE CODE.  *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU PUBLIC LICENSE 2, WHICH IS INCLUDED WITH THIS SOURCE.    *
 * PLEASE READ THESE TERMS DISTRIBUTING.                            *
 *                                                                  *
 * THE OggSQUISH SOURCE CODE IS (C) COPYRIGHT 1994-1999             *
 * by 1999 Monty <monty@xiph.org> and The XIPHOPHORUS Company       *
 * http://www.xiph.org/                                             *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0b_12_VQH_
#define _V_res0b_12_VQH_
#include "vorbis/codebook.h"

static long _vq_quantlist_res0b_12[] = {
	0,
	3,
	6,
	8,
	10,
	12,
	13,
	14,
	15,
	16,
	17,
	18,
	19,
	20,
	22,
	24,
	26,
	29,
	32,
};

static long _vq_lengthlist_res0b_12[] = {
	 0, 0, 0, 0, 0,11, 0, 0, 0, 0, 0, 0,10, 0, 0, 0,
	 0, 0, 0,14, 0,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0,12,14, 0, 0, 0, 0, 0,10, 0, 9, 0, 0, 7,
	 0, 0, 9, 0,10, 0, 0, 0, 0,12, 0,10, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0,12, 0, 0, 0, 0,
	 9, 0, 7, 0, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 0, 0,
	 9, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0,
	 0, 0, 0, 0, 7, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 5, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 5, 0, 0,
	 4, 0, 4, 5, 4, 5, 4, 0, 3, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 4, 5, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0,
	 0, 6, 7, 0, 0, 0, 7, 0, 6, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 5, 0, 0, 0, 7, 0, 0, 0, 0, 0,11, 0,10, 0, 9, 0,
	 7, 0, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 0,11,
	 0,12, 0,11, 0,10, 0, 0, 7, 0, 0, 9, 0, 0,10, 0,
	 0, 0, 0, 0,13, 0, 0, 0,10, 0, 0, 0, 0, 0, 0, 9,
	 0, 0, 0,12,13, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

static double _vq_quantthresh_res0b_12[] = {
	-14.5, -11.5, -9, -7, -5, -3.5, -2.5, -1.5, 
	-0.5, 0.5, 1.5, 2.5, 3.5, 5, 7, 9, 
	11.5, 14.5, 
};

static long _vq_quantmap_res0b_12[] = {
	    0,    1,    2,    3,    4,    5,    6,    7,
	    8,    9,   10,   11,   12,   13,   14,   15,
	   16,   17,   18,
};

static encode_aux_threshmatch _vq_auxt_res0b_12 = {
	_vq_quantthresh_res0b_12,
	_vq_quantmap_res0b_12,
	19,
	19
};

static long _vq_ptr0_res0b_12[] = {
	    -1,    -2,    -3,    -4,    -5,    19,    -7,     5,
	    21,   -10,   -11,    21,   -13,    42,    59,   -16,
	   -17,    44,    80,   -20,    80,   -22,   100,   118,
	   -25,   -26,   100,   104,   160,   176,   -31,   -32,
	    19,   -34,    57,    59,   -37,    96,   171,    59,
	   -41,   116,   -43,   118,   173,   -46,   -47,   -48,
	   -49,     5,   -51,    12,    47,   -54,    47,   -56,
	    47,    88,   -59,   -60,   -61,    88,   104,   -64,
	   104,   -66,   104,   161,   182,   -70,   108,   128,
	   -73,   -74,   -75,    12,   -77,    35,    52,   -80,
	   -81,    73,   -83,   -84,    90,   108,   128,   -88,
	    36,   -90,    73,    75,   -93,   -94,   -95,   -96,
	   -97,   171,   230,  -100,  -101,   173,   230,   176,
	  -105,  -106,  -107,   176,   216,  -110,   178,   179,
	  -113,  -114,   199,   216,   232,   256,  -119,  -120,
	  -121,   266,   268,  -124,   305,  -126,   307,   324,
	  -129,  -130,  -131,   270,   307,  -134,   307,   328,
	  -137,  -138,   256,   272,  -141,   309,  -143,   312,
	   328,  -146,  -147,  -148,   149,  -150,   225,   280,
	   150,  -154,   226,   301,  -157,   182,  -159,   199,
	  -161,   200,   256,  -164,  -165,   184,   242,   260,
	   280,  -170,  -171,   199,  -173,   256,  -175,  -176,
	   260,  -178,  -179,   278,   315,   280,  -183,   312,
	   315,  -186,  -187,  -188,   301,   339,   303,  -192,
	   318,   335,
};

static long _vq_ptr1_res0b_12[] = {
	   -92,   -45,   -30,   -15,    -9,    -6,    -8,    42,
	    42,    44,   -12,    59,   -14,    80,    80,   -24,
	   -19,   -18,    82,   -21,   118,   -23,   176,   176,
	   -28,   -27,   160,   160,   -29,   178,   -39,   -36,
	   -33,   -35,    96,    96,   -38,   173,   173,   -40,
	   -42,   173,   -44,   176,   176,   -72,   -58,   -53,
	   -50,    47,   -52,    50,    50,   -55,    82,   -57,
	   104,   104,   -68,   -63,   -62,   108,   108,   -65,
	   160,   -67,   162,   162,   -69,   -71,   184,   184,
	   -87,   -79,   -76,    52,   -78,    73,    73,   184,
	   -82,   149,   -86,   -85,   128,   128,   149,   -89,
	    75,   -91,   150,   150,  -145,  -118,  -104,   -99,
	   -98,   266,   266,  -103,  -102,   232,   232,   232,
	  -112,  -109,  -108,   232,   232,  -111,   216,   216,
	  -116,  -115,   256,   256,  -117,   272,  -128,  -123,
	  -122,   305,   305,  -125,   307,  -127,   345,   345,
	  -136,  -133,  -132,   309,   309,  -135,   345,   345,
	  -140,  -139,   312,   312,  -142,   328,  -144,   335,
	   335,  -169,  -156,  -152,  -149,  -151,   301,   301,
	  -153,  -155,   303,   303,  -163,  -158,  -160,   256,
	  -162,   260,   260,  -167,  -166,   260,   260,  -168,
	   301,  -185,  -174,  -172,   260,   312,  -182,  -177,
	   280,  -181,  -180,   318,   318,   318,  -184,   335,
	   335,  -191,  -190,  -189,   340,   340,   340,  -193,
	   339,   339,
};

static long _vq_p_res0b_12[] = {
	   208,   160,   160,    84,    10,    38,    10,    10,
	    42,    84,    42,    42,    84,    84,   118,   164,
	   164,    88,   160,   160,   160,   200,   200,   236,
	   200,   200,   200,   208,   320,   352,   192,   114,
	    38,   114,   114,   118,   192,   192,   342,   118,
	   232,   232,   236,   236,   346,   176,    94,   100,
	    10,    10,    24,    24,    94,   164,    94,    94,
	    94,   176,   324,   216,   176,   176,   208,   320,
	   208,   208,   208,   322,   364,   216,   216,   256,
	    70,   104,    24,    24,    70,    70,   104,   256,
	   146,   146,   180,   180,   180,   216,   256,    72,
	    72,   146,   146,   150,   540,   464,   346,   342,
	   342,   342,   460,   346,   346,   346,   460,   352,
	   358,   352,   352,   352,   432,   356,   356,   358,
	   432,   398,   398,   432,   464,   512,   536,   536,
	   532,   532,   536,   610,   610,   614,   614,   648,
	   540,   618,   540,   540,   614,   614,   614,   656,
	   544,   512,   512,   544,   618,   618,   624,   624,
	   656,   298,   450,   298,   298,   450,   450,   560,
	   300,   452,   452,   602,   364,   364,   398,   398,
	   400,   400,   512,   484,   368,   368,   484,   520,
	   560,   560,   512,   398,   512,   512,   556,   520,
	   520,   556,   556,   556,   630,   560,   624,   624,
	   630,   602,   602,   602,   602,   678,   606,   636,
	   636,   670,
};

static long _vq_q_res0b_12[] = {
	   512,   176,   232,   164,    88,    42,    42,    84,
	    84,    88,    84,   118,   118,   160,   160,   208,
	   200,   164,   164,   200,   236,   236,   352,   352,
	   352,   208,   320,   320,   356,   356,   232,   342,
	   114,   118,   192,   192,   342,   346,   346,   232,
	   236,   346,   346,   352,   352,   180,   364,   176,
	    24,    94,    94,   100,   100,   208,   164,   176,
	   208,   208,   364,   324,   208,   216,   216,   322,
	   320,   322,   324,   324,   368,   256,   368,   368,
	    72,   180,    70,   104,   104,   146,   146,   368,
	   180,   298,   298,   216,   256,   256,   298,   146,
	   150,   150,   300,   300,   560,   540,   512,   346,
	   460,   532,   532,   352,   460,   464,   464,   464,
	   398,   356,   432,   464,   464,   358,   432,   432,
	   544,   432,   512,   512,   544,   544,   540,   614,
	   536,   610,   610,   648,   614,   648,   690,   690,
	   544,   656,   614,   618,   618,   656,   690,   690,
	   618,   544,   624,   624,   624,   656,   656,   670,
	   670,   670,   484,   300,   450,   560,   602,   602,
	   452,   602,   606,   606,   368,   400,   400,   512,
	   512,   520,   520,   560,   484,   520,   520,   560,
	   602,   602,   556,   512,   520,   624,   624,   556,
	   560,   560,   630,   636,   636,   636,   630,   670,
	   670,   636,   606,   678,   680,   680,   680,   670,
	   678,   678,
};

static encode_aux_nearestmatch _vq_auxn_res0b_12 = {
	_vq_ptr0_res0b_12,
	_vq_ptr1_res0b_12,
	_vq_p_res0b_12,
	_vq_q_res0b_12,
	194, 194
};

static static_codebook _vq_book_res0b_12 = {
	2, 361,
	_vq_lengthlist_res0b_12,
	1, -527433728, 1611661312, 6, 0,
	_vq_quantlist_res0b_12,
	&_vq_auxn_res0b_12,
	&_vq_auxt_res0b_12,
};


#endif
