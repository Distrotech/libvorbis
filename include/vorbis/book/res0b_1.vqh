/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE Ogg Vorbis SOFTWARE CODEC SOURCE CODE.  *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU PUBLIC LICENSE 2, WHICH IS INCLUDED WITH THIS SOURCE.    *
 * PLEASE READ THESE TERMS DISTRIBUTING.                            *
 *                                                                  *
 * THE OggSQUISH SOURCE CODE IS (C) COPYRIGHT 1994-1999             *
 * by 1999 Monty <monty@xiph.org> and The XIPHOPHORUS Company       *
 * http://www.xiph.org/                                             *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res0b_1_VQH_
#define _V_res0b_1_VQH_
#include "vorbis/codebook.h"

static long _vq_quantlist_res0b_1[] = {
	0,
	1,
	2,
};

static long _vq_lengthlist_res0b_1[] = {
	 0,11, 0, 0, 7, 0, 0, 0, 0,10, 0,10, 7, 0, 7, 0,
	 8, 0, 0,11, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 8, 4,
	 8, 0, 0, 0, 0, 4, 0, 4, 1, 4, 0, 4, 0,10, 0, 0,
	 0, 4, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 8, 0, 8, 4, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0,
};

static double _vq_quantthresh_res0b_1[] = {
	-0.5, 0.5, 
};

static long _vq_quantmap_res0b_1[] = {
	    0,    1,    2,
};

static encode_aux_threshmatch _vq_auxt_res0b_1 = {
	_vq_quantthresh_res0b_1,
	_vq_quantmap_res0b_1,
	3,
	3
};

static long _vq_ptr0_res0b_1[] = {
	    -1,    -2,    -3,    -4,    -5,    -6,     1,    30,
	    37,    64,   -11,   -12,     1,    32,   -15,   -16,
	    31,    37,   -19,    32,    37,   -22,   -23,   -24,
	   -25,     9,    39,   -28,    37,    39,   -31,    30,
	    37,   -34,    30,   -36,    45,    64,   -39,   -40,
	   -41,   -42,    11,    41,    32,   -46,   -47,    32,
	    41,   -50,   -51,    37,   -53,    41,    50,   -56,
	     9,   -58,   -59,   -60,    19,    49,    45,   -64,
	   -65,   -66,    37,    50,   -69,    49,    50,   -72,
	    45,    49,   -75,   -76,   -77,   -78,   -79,   -80,
	   -81,     4,    16,   -84,    12,    16,   -87,    12,
	    16,   -90,    16,    22,    22,   -94,   -95,   -96,
	    30,   -98,   -99,    39,    49,  -102,    45,    49,
	    66,  -106,    30,  -108,    43,    49,  -111,  -112,
	    31,    67,  -115,    43,  -117,    49,    67,  -120,
	  -121,  -122,  -123,     4,    16,  -126,  -127,    14,
	    22,  -130,    16,    22,  -133,  -134,    14,    16,
	    16,  -138,  -139,  -140,    31,    67,  -143,    43,
	  -145,    49,    67,  -148,  -149,  -150,    32,    67,
	    43,  -154,  -155,  -156,    41,    67,  -159,    50,
	    67,  -162,    43,    50,
};

static long _vq_ptr1_res0b_1[] = {
	   -74,   -38,   -21,   -10,    -8,    -7,    37,    37,
	    -9,    66,   -14,   -13,    37,    37,   -18,   -17,
	    64,    64,   -20,    64,    64,   -33,   -30,   -27,
	   -26,    45,    45,   -29,    45,    45,   -32,    39,
	    39,   -35,    66,   -37,    66,    66,   -55,   -45,
	   -44,   -43,    50,    50,    41,   -49,   -48,    64,
	    64,   -52,    64,    50,   -54,    64,    64,   -57,
	    37,   -63,   -62,   -61,    50,    50,    49,   -71,
	   -68,   -67,    64,    64,   -70,    64,    64,   -73,
	    64,    64,  -119,   -93,   -92,   -89,   -86,   -83,
	   -82,    40,    40,   -85,    40,    40,   -88,    30,
	    30,   -91,    40,    40,    45,  -110,  -104,   -97,
	    66,  -101,  -100,    66,    66,  -103,    66,    66,
	  -105,  -107,    70,  -109,    70,    70,  -114,  -113,
	    70,    70,  -116,    70,  -118,    70,    70,  -137,
	  -132,  -125,  -124,    40,    40,  -129,  -128,    40,
	    40,  -131,    40,    40,  -136,  -135,    50,    50,
	    32,  -147,  -142,  -141,    70,    70,  -144,    70,
	  -146,    70,    70,  -153,  -152,  -151,    70,    70,
	    70,  -161,  -158,  -157,    70,    70,  -160,    70,
	    70,  -163,    70,    70,
};

static long _vq_p_res0b_1[] = {
	   148,     4,     4,   120,   120,     4,     4,   120,
	   148,   256,     4,     4,     4,   128,   124,   124,
	   124,   148,   128,   128,   148,   148,    36,    36,
	    36,    36,   156,   148,   148,   156,   120,   120,
	   148,   120,   120,   180,   180,   256,    44,    44,
	    44,    44,    44,   164,   128,   128,   128,   128,
	   164,   148,   148,   148,   164,   164,   200,    36,
	    36,    76,    76,    76,    76,   196,   180,   148,
	   148,   148,   148,   200,   196,   196,   200,   180,
	   180,   196,   156,    16,    48,    48,    16,    16,
	    16,    16,    64,    48,    48,    64,    48,    48,
	    64,    64,    64,    88,    88,   120,   156,   120,
	   120,   156,   156,   156,   196,   180,   180,   196,
	   264,   120,   120,   172,   172,   196,   124,   124,
	   124,   268,   172,   172,   196,   196,   268,    16,
	    16,    16,    16,    16,    64,    56,    56,    56,
	    88,    64,    64,    88,    56,    56,    56,    64,
	    64,   124,   124,   124,   124,   268,   172,   172,
	   196,   196,   268,   128,   128,   128,   128,   268,
	   172,   164,   164,   164,   164,   268,   200,   200,
	   268,   172,   172,   200,
};

static long _vq_q_res0b_1[] = {
	   160,    44,    36,   124,   256,   120,   148,   148,
	   256,   264,   124,   128,   148,   148,   128,   148,
	   256,   256,   148,   256,   256,   256,   120,   148,
	   156,   180,   180,   156,   180,   180,   148,   156,
	   156,   256,   264,   256,   264,   264,    76,   148,
	   128,   164,   200,   200,   164,   148,   164,   256,
	   256,   164,   256,   200,   200,   256,   256,    76,
	   148,   148,   180,   196,   200,   200,   196,   180,
	   196,   200,   256,   256,   200,   256,   256,   196,
	   256,   256,   164,   124,   180,    88,   120,    48,
	    64,   160,   160,    64,   160,   160,    64,   120,
	   120,    88,   160,   160,   180,   124,   172,   156,
	   264,   180,   196,   264,   264,   196,   264,   264,
	   280,   172,   280,   196,   280,   280,   172,   268,
	   280,   280,   196,   280,   268,   280,   280,   124,
	   128,    56,    64,   160,   160,    64,    88,   160,
	   160,    88,   160,   160,   128,    64,   200,   200,
	   128,   128,   172,   268,   280,   280,   196,   280,
	   268,   280,   280,   164,   172,   268,   280,   280,
	   280,   172,   200,   268,   280,   280,   268,   280,
	   280,   200,   280,   280,
};

static encode_aux_nearestmatch _vq_auxn_res0b_1 = {
	_vq_ptr0_res0b_1,
	_vq_ptr1_res0b_1,
	_vq_p_res0b_1,
	_vq_q_res0b_1,
	164, 164
};

static static_codebook _vq_book_res0b_1 = {
	4, 81,
	_vq_lengthlist_res0b_1,
	1, -535822336, 1611661312, 2, 0,
	_vq_quantlist_res0b_1,
	&_vq_auxn_res0b_1,
	&_vq_auxt_res0b_1,
};


#endif
