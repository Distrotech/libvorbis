# $Id: Makefile.in,v 1.5 2000/01/05 03:11:10 xiphmont Exp $

###############################################################################
#                                                                             #
# To build a production vorbis (preferrably using gmake), just type 'make'.   #
# To build with debugging or profiling information, use 'make debug' or       #
# 'make profile' respectively.  'make clean' is a good idea between builds    #
# with different target names, or before a final build.                       #
#                                                                             #
###############################################################################


# DO NOT EDIT BELOW! ##########################################################
# (unless, of course, you know what you are doing :) ##########################

@SET_MAKE@
FLAGS=-I. -I../include @TYPESIZES@ @CFLAGS@
OPT=@OPT@ $(FLAGS)
DEBUG=@DEBUG@ $(FLAGS)
PROFILE=@PROFILE@ $(FLAGS)
CC=@CC@
LD=@CC@
LDFLAGS=@LDFLAGS@ $(FLAGS)
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@ -lm

HFILES =	../include/vorbis/codebook.h vqgen.h vqext.h

OFILES = 	vqgen.o vqsplit.o 
ALLOFILES = 	$(OFILES) lspdata.o train.o build.o

all:
	$(MAKE) target CFLAGS="$(OPT)"

debug:	
	$(MAKE) target CFLAGS="$(DEBUG)"

profile: 
	$(MAKE) target CFLAGS="$(PROFILE)"

target:	lspvqtrain vqbuild

lspvqtrain:	$(OFILES) lspdata.o train.o
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o $@ $(LIBS)

vqbuild:	$(OFILES) build.o
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -o $@ $(LIBS)

$(ALLOFILES): 	$(HFILES)

.c.o:
	$(CC) $(CFLAGS) -c $<

$(OFILES):	$(HFILES)

clean:
	-rm -f *.o *.a test* *~ *.out *.m config.* \
		lspvqtrain

distclean:	clean
	-rm -f Makefile
