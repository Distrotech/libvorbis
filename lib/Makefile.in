# vorbis makefile configured for use with gcc on any platform

# $Id: Makefile.in,v 1.14 1999/11/02 23:27:32 xiphmont Exp $

###############################################################################
#                                                                             #
# To build a production vorbis (preferrably using gmake), just type 'make'.   #
# To build with debugging or profiling information, use 'make debug' or       #
# 'make profile' respectively.  'make clean' is a good idea between builds    #
# with different target names, or before a final build.                       #
#                                                                             #
###############################################################################


# DO NOT EDIT BELOW! ##########################################################
# (unless, of course, you know what you are doing :) ##########################

@SET_MAKE@
FLAGS=-I. @TYPESIZES@ @CFLAGS@
OPT=@OPT@ $(FLAGS)
DEBUG=@DEBUG@ $(FLAGS)
PROFILE=@PROFILE@ $(FLAGS)
CC=@CC@
LD=@CC@
LDFLAGS=@LDFLAGS@ $(FLAGS)
AR=@AR@
RANLIB=@RANLIB@
LIBS=@LIBS@ -lm

HFILES =	mdct.h codec.h bitwise.h envelope.h lpc.h lsp.h \
		psy.h smallft.h window.h xlogmap.h

LFILES = 	framing.o mdct.o smallft.o block.o envelope.o window.o\
		lsp.o lpc.o analysis.o synthesis.o psy.o info.o bitwise.o\
		spectrum.o

FFILES = 	vorbisfile.o

EFILES =	encoder_example.o decoder_example.o chaining_example.o

all:
	$(MAKE) target CFLAGS="$(OPT)"

debug:	
	$(MAKE) target CFLAGS="$(DEBUG)"

analysis:	
	$(MAKE) target CFLAGS="$(DEBUG) -DANALYSIS"

profile: 
	$(MAKE) target CFLAGS="$(PROFILE)"

target:	libvorbis.a vorbisfile.a \
	encoder_example decoder_example chaining_example

selftest:	
	$(MAKE) clean
	$(CC) $(DEBUG) $(LDFLAGS) -D_V_SELFTEST framing.c -o test_framing 
	$(CC) $(DEBUG) $(LDFLAGS) -D_V_SELFTEST bitwise.c\
		-o test_bitwise -lm
	@echo
	@./test_framing
	@./test_bitwise

encoder_example:	$(EFILES) libvorbis.a
	$(CC) $(CFLAGS) $(LDFLAGS) encoder_example.o libvorbis.a -o \
			encoder_example -lm

decoder_example:	$(EFILES) libvorbis.a
	$(CC) $(CFLAGS) $(LDFLAGS) decoder_example.o libvorbis.a -o \
			decoder_example -lm

chaining_example:	$(EFILES) libvorbis.a vorbisfile.a
	$(CC) $(CFLAGS) $(LDFLAGS) chaining_example.o \
			vorbisfile.a libvorbis.a -o chaining_example -lm

libvorbis.a: 	$(LFILES)	
		$(AR) -r libvorbis.a $^
		$(RANLIB) libvorbis.a

vorbisfile.a:	$(FFILES)
		$(AR) -r vorbisfile.a $^
		$(RANLIB) vorbisfile.a


$(LFILES): 	$(HFILES)
$(FFILES): 	$(HFILES) vorbisfile.h
$(EFILES): 	$(HFILES) vorbisfile.h

info.o:		modes.h

.c.o:
	$(CC) $(CFLAGS) -c $<

clean:
	-rm -f *.o *.a test* *~ *.out ogg config.* dsptest
