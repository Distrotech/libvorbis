/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU LESSER/LIBRARY PUBLIC LICENSE, WHICH IS INCLUDED WITH    *
 * THIS SOURCE. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.        *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2001             *
 * by the XIPHOPHORUS Company, http://www.xiph.org/                 *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res_Ac_5_VQH_
#define _V_res_Ac_5_VQH_
#include "codebook.h"

static long _vq_quantlist_res_Ac_5[] = {
	2,
	1,
	3,
	0,
	4,
};

static long _vq_lengthlist_res_Ac_5[] = {
	 2, 4, 3, 9, 9, 0, 0, 0, 8, 8, 0, 0, 0, 8, 8, 0,
	 0, 0, 8, 8, 0, 0, 0, 8, 8, 3, 5, 4,10, 9, 0, 0,
	 0, 9, 8, 0, 0, 0, 9, 8, 0, 0, 0, 9, 8, 0, 0, 0,
	 9, 8, 4, 4, 5, 9,10, 0, 0, 0, 8, 9, 0, 0, 0, 8,
	 9, 0, 0, 0, 8, 9, 0, 0, 0, 8, 9, 9,10, 9,14,11,
	 0, 0, 0,14,13, 0, 0, 0,14,12, 0, 0, 0,16,15, 0,
	 0, 0,16,14, 9, 9,10,11,14, 0, 0, 0,13,13, 0, 0,
	 0,12,16, 0, 0, 0,13,15, 0, 0, 0, 0,16, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 8,15,12, 0, 0, 0,
	13,12, 0, 0, 0,15,13, 0, 0, 0,14,12, 0, 0, 0,14,
	13, 8, 8, 9,12,14, 0, 0, 0,12,12, 0, 0, 0,12,14,
	 0, 0, 0,13,14, 0, 0, 0,14,14, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 8, 9, 8,13,13, 0, 0, 0,13,13, 0,
	 0, 0,14,11, 0, 0, 0,14,14, 0, 0, 0,16,12, 8, 8,
	 9,13,13, 0, 0, 0,13,14, 0, 0, 0,12,13, 0, 0, 0,
	13,14, 0, 0, 0,13,16, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 8, 9, 8, 0,15, 0, 0, 0,13,12, 0, 0, 0,13,
	13, 0, 0, 0,13,12, 0, 0, 0,13,13, 8, 8, 9,16,16,
	 0, 0, 0,12,13, 0, 0, 0,14,13, 0, 0, 0,12,13, 0,
	 0, 0,15,14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,
	 9, 8, 0,14, 0, 0, 0,16,14, 0, 0, 0,14,12, 0, 0,
	 0,13,14, 0, 0, 0,15,12, 8, 8, 9,14,16, 0, 0, 0,
	12,14, 0, 0, 0,13,14, 0, 0, 0,14,13, 0, 0, 0,13,
	14,
};

static float _vq_quantthresh_res_Ac_5[] = {
	-1.5, -0.5, 0.5, 1.5, 
};

static long _vq_quantmap_res_Ac_5[] = {
	    3,    1,    0,    2,    4,
};

static encode_aux_threshmatch _vq_auxt_res_Ac_5 = {
	_vq_quantthresh_res_Ac_5,
	_vq_quantmap_res_Ac_5,
	5,
	5
};

static long _vq_pigeonmap_res_Ac_5[] = {
	    1,     0,     0,     0, 
};

static long _vq_fitlist_res_Ac_5[] = {
	    0,     1,     2,     3,     8,    13,    18,    25, 
	   26,    27,    28,    33,    38,    43,    50,    51, 
	   52,    53,    58,    63,    68,    75,    76,    77, 
	   78,    83,    88,    93,   200,   201,   202,   203, 
	  208,   213,   218,   325,   326,   327,   328,   333, 
	  450,   451,   452,   458,     4,     9,    14,    19, 
	   29,    34,    39,    44,    54,    59,    64,    69, 
	   79,    84,    89,    94,   204,   209,   214,   219, 
	  329,   334,   454,   459,   339,   344,   464,   469, 
	   23,    48,    73,    98,   223,   338,   463,    24, 
	   49,    74,    99,   224,   349,   474,   100,   101, 
	  102,   103,   113,   225,   226,   227,   228,   238, 
	  248,   348,   350,   351,   363,   373,   473,   475, 
	  476,   488,   498,   575,   576,   588,   598,   104, 
	  114,   124,   229,   239,   249,   352,   364,   374, 
	  477,   489,   499,   577,   589,   599,   108,   118, 
	  233,   243,   353,   358,   478,   483,   109,   119, 
	  234,   244,   354,   359,   479,   484,   369,   494, 
	  600,   601,   613,   623,   602,   614,   624,   368, 
	  493,   603,   604,   343,   583,   579,   584,   594, 
	  608,   609,   619,   618,   593,     0,     1,     3, 
	    8,    13,    18,    25,    26,    28,    33,    38, 
	   43,    50,    51,    53,    58,    63,    68,    75, 
	   76,    78,    83,    88,    93,   200,   201,   203, 
	  208,   213,   218,   325,   326,   328,   333,   338, 
	  343,   450,   451,   458,   463,   468,    23,    48, 
	   73,    98,   223,   348,   473,   100,   101,   103, 
	  108,   113,   118,   225,   226,   228,   233,   238, 
	  243,   350,   351,   353,   358,   363,   368,   475, 
	  476,   478,   483,   488,   493,   248,   373,   498, 
	  575,   576,   583,   588,   593,   598,   600,   601, 
	  603,   608,   613,   618,   623,     2,    27,    52, 
	   77,   327,   577,   102,   352,   602,     0,     1, 
	    2,     3,     4,     8,     9,    13,    18,    19, 
	   25,    26,    27,    28,    29,    33,    34,    38, 
	   43,    44,    50,    51,    52,    53,    54,    58, 
	   59,    63,    68,    69,    75,    76,    77,    78, 
	   79,    83,    84,    88,    93,    94,   100,   101, 
	  102,   103,   108,   118,   200,   201,   202,   203, 
	  204,   208,   209,   213,   218,   219,   225,   226, 
	  227,   228,   233,   243,   325,   326,   327,   328, 
	  333,   334,   343,   344,   350,   351,   358,   368, 
	  450,   451,   452,   458,   459,   468,   469,   475, 
	  476,   483,   493,   575,   576,   583,   593,    14, 
	   39,    64,    89,   104,   109,   119,   214,   229, 
	  234,   244,   329,   352,   359,   369,   454,   477, 
	  484,   494,   577,   584,   594,   113,   238,   353, 
	  478,   600,   601,   608,   618,   114,   239,   354, 
	  479,   602,   609,   619,   363,   488,   603,   364, 
	  489,   604,   338,   339,   579,   613,   614,   588, 
	  589,     0,     1,     2,     3,     8,    13,    18, 
	   25,    26,    27,    28,    33,    38,    43,    75, 
	   76,    77,    78,    83,    88,    93,   200,   201, 
	  202,   203,   208,   213,   218,   325,   326,   327, 
	  328,   333,   338,   343,   450,   451,   452,   458, 
	  463,   468,     4,     9,    14,    19,    29,    34, 
	   39,    44,    79,    84,    89,    94,   204,   209, 
	  214,   219,   329,   334,   339,   344,   454,   459, 
	  464,   469,    23,    48,    98,   223,   348,   473, 
	   24,    49,    99,   224,   349,   474,    50,    51, 
	   52,    53,    63,    73,   575,   576,   577,   588, 
	  598,    54,    64,    74,   579,   589,   599,   583, 
	  593,   584,   594,     0,     1,     2,     3,     4, 
	    8,     9,    13,    18,    19,    25,    26,    27, 
	   28,    29,    33,    34,    38,    43,    44,    50, 
	   51,    52,    53,    58,    68,    75,    76,    77, 
	   78,    79,    83,    84,    88,    93,    94,   200, 
	  201,   202,   203,   204,   208,   209,   213,   218, 
	  219,   325,   326,   327,   328,   329,   333,   334, 
	  338,   343,   344,   450,   451,   452,   454,   458, 
	  459,   463,   468,   469,   575,   576,   577,   583, 
	  593,    14,    39,    54,    59,    69,    89,   214, 
	  339,   464,   579,   584,   594,   588,   589,     0, 
	    1,     2,     3,     4,     8,     9,    13,    14, 
	   18,    19,    23,    25,    26,    27,    28,    29, 
	   33,    34,    38,    39,    43,    44,    48,    50, 
	   51,    52,    53,    54,    58,    59,    63,    68, 
	   75,    76,    77,    78,    79,    83,    84,    88, 
	   93,   100,   101,   102,   103,   108,   200,   201, 
	  202,   203,   204,   208,   209,   213,   214,   218, 
	  219,   223,   225,   226,   227,   228,   233,   238, 
	  243,   325,   326,   327,   328,   333,   450,   451, 
	  452,   454,   458,   459,   463,   464,   468,   469, 
	  473,   475,   476,   477,   478,   483,   488,   493, 
	   24,    49,    64,    69,    89,    94,   104,   109, 
	  224,   229,   234,   239,   244,   329,   334,   474, 
	  479,   484,   489,   494,    74,    99,   114,   119, 
	  339,   344,    73,    98,   113,   248,   338,   498, 
	  249,   499,   124,   349,   348,   350,   351,   363, 
	  373,   352,   364,   374,   118,   353,   358,   354, 
	  359,   369,     0,     1,     2,     3,     8,    13, 
	   18,    23,    25,    26,    27,    28,    33,    38, 
	   43,    48,    50,    51,    52,    53,    58,    63, 
	   68,    73,    75,    76,    77,    78,    83,    88, 
	   93,    98,   100,   101,   103,   108,   113,   118, 
	  200,   201,   202,   203,   208,   213,   218,   223, 
	  225,   226,   228,   233,   238,   243,   325,   326, 
	  328,   333,   338,   343,   450,   451,   452,   458, 
	  463,   468,   473,   475,   476,   478,   483,   488, 
	  493,   248,   348,   498,   102,   227,   350,   351, 
	  353,   358,   363,   368,   477,   373,     0,     1, 
	    2,     3,     4,     8,     9,    13,    14,    18, 
	   19,    25,    26,    27,    28,    29,    33,    34, 
	   38,    39,    43,    44,    50,    51,    52,    53, 
	   54,    58,    59,    63,    68,    69,    75,    76, 
	   77,    78,    79,    83,    84,    88,    93,    94, 
	  100,   101,   102,   103,   108,   109,   118,   119, 
	  200,   201,   202,   203,   204,   208,   209,   213, 
	  214,   218,   219,   225,   226,   227,   228,   229, 
	  233,   234,   238,   243,   244,   325,   326,   327, 
	  328,   333,   334,   343,   344,   350,   351,   358, 
	  368,   450,   451,   452,   454,   458,   459,   463, 
	  464,   468,   469,   475,   476,   477,   478,   479, 
	  483,   484,   488,   493,   494,    64,    89,   104, 
	  239,   329,   352,   359,   369,   489,   113,   353, 
	  114,   354, 
};

static long _vq_fitmap_res_Ac_5[] = {
	    0,   165,   262,   165,   401,   165,   499,   165, 
	  583,   722,   806,   722,   401,   165,   499,   165, 
};

static long _vq_fitlength_res_Ac_5[] = {
	  165,    97,   139,    97,    98,    97,    84,    97, 
	  139,    84,   116,    84,    98,    97,    84,    97, 
};

static encode_aux_pigeonhole _vq_auxp_res_Ac_5 = {
	-2, 1, 4, 2,
	_vq_pigeonmap_res_Ac_5,
	922,
	_vq_fitlist_res_Ac_5,
	_vq_fitmap_res_Ac_5,
	_vq_fitlength_res_Ac_5
};

static static_codebook _vq_book_res_Ac_5 = {
	4, 625,
	_vq_lengthlist_res_Ac_5,
	1, -533725184, 1611661312, 3, 0,
	_vq_quantlist_res_Ac_5,
	NULL,
	&_vq_auxt_res_Ac_5,
	&_vq_auxp_res_Ac_5,
	0
};


#endif
