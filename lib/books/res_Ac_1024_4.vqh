/********************************************************************
 *                                                                  *
 * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
 * USE, DISTRIBUTION AND REPRODUCTION OF THIS SOURCE IS GOVERNED BY *
 * THE GNU LESSER/LIBRARY PUBLIC LICENSE, WHICH IS INCLUDED WITH    *
 * THIS SOURCE. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.        *
 *                                                                  *
 * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2001             *
 * by the XIPHOPHORUS Company, http://www.xiph.org/                 *
 *                                                                  *
 ********************************************************************

 function: static codebook autogenerated by vq/somethingorother

 ********************************************************************/

#ifndef _V_res_Ac_1024_4_VQH_
#define _V_res_Ac_1024_4_VQH_
#include "codebook.h"

static long _vq_quantlist_res_Ac_1024_4[] = {
	2,
	1,
	3,
	0,
	4,
};

static long _vq_lengthlist_res_Ac_1024_4[] = {
	 3, 5, 5, 7, 7, 0, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0,
	 0, 0, 8, 8, 0, 0, 0, 8, 8, 5, 7, 7, 8, 8, 0, 7,
	 7, 0, 0, 0, 8, 7, 0, 0, 0, 0, 0,10,10, 0, 0, 0,
	11,10, 5, 7, 7, 8, 8, 0, 7, 8, 0, 0, 0, 7, 7, 0,
	 0, 0, 0, 0,10,11, 0, 0, 0,10,10, 7, 8, 8,10, 8,
	 0, 9, 8, 0, 0, 0, 9, 8, 0, 0, 0, 0, 0,12,11, 0,
	 0, 0,12,11, 7, 8, 9, 8,10, 0, 8, 9, 0, 0, 0, 8,
	 9, 0, 0, 0, 0, 0,11,12, 0, 0, 0,11,12, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 5, 8, 7, 9, 8, 0, 7, 6, 0, 0,
	 0, 7, 7, 0, 0, 0, 0, 0,10, 9, 0, 0, 0,10,10, 5,
	 7, 8, 8, 9, 0, 6, 7, 0, 0, 0, 7, 7, 0, 0, 0, 0,
	 0, 9,10, 0, 0, 0,10, 9, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 5, 7, 7, 9, 8, 0, 7, 7, 0, 0, 0, 7, 7,
	 0, 0, 0, 0, 0,10,10, 0, 0, 0,10, 9, 5, 7, 7, 8,
	 9, 0, 7, 7, 0, 0, 0, 6, 7, 0, 0, 0, 0, 0,10,10,
	 0, 0, 0, 9,10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 8,11,10,12,11, 0,10, 9, 0, 0, 0,10,10, 0,
	 0, 0, 0, 0,13,11, 0, 0, 0,12,13, 8,10,11,11,12,
	 0, 9,10, 0, 0, 0,10,10, 0, 0, 0, 0, 0,11,13, 0,
	 0, 0,13,12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,
	11,10,12,11, 0,10,10, 0, 0, 0,10, 9, 0, 0, 0, 0,
	 0,13,12, 0, 0, 0,13,11, 8,10,11,11,12, 0,10,10,
	 0, 0, 0, 9,10, 0, 0, 0, 0, 0,12,13, 0, 0, 0,11,
	13,
};

static float _vq_quantthresh_res_Ac_1024_4[] = {
	-1.5, -0.5, 0.5, 1.5, 
};

static long _vq_quantmap_res_Ac_1024_4[] = {
	    3,    1,    0,    2,    4,
};

static encode_aux_threshmatch _vq_auxt_res_Ac_1024_4 = {
	_vq_quantthresh_res_Ac_1024_4,
	_vq_quantmap_res_Ac_1024_4,
	5,
	5
};

static long _vq_pigeonmap_res_Ac_1024_4[] = {
	    1,     0,     0,     0, 
};

static long _vq_fitlist_res_Ac_1024_4[] = {
	    0,     1,     2,     3,     6,     7,    11,    12, 
	   18,    25,    26,    27,    28,    31,    32,    36, 
	   37,    43,    50,    51,    52,    53,    56,    57, 
	   61,    62,    68,    75,    76,    77,    78,    81, 
	   82,    86,    87,    93,   150,   151,   152,   153, 
	  156,   157,   161,   162,   168,   175,   176,   177, 
	  178,   181,   182,   186,   187,   193,   275,   276, 
	  277,   278,   281,   282,   286,   287,   293,   300, 
	  301,   302,   303,   306,   307,   311,   450,   451, 
	  452,   453,   456,   457,   461,     4,    19,    29, 
	   44,    54,    69,    79,    94,   154,   169,   179, 
	  194,   279,   294,   304,   312,   454,   462,   319, 
	  469,    23,    48,    73,    98,   173,   198,   298, 
	   24,    49,    74,    99,   174,   199,   299,   324, 
	  474,   323,   473,   100,   101,   102,   103,   106, 
	  107,   111,   112,   118,   318,   475,   476,   477, 
	  478,   481,   482,   486,   104,   119,   479,   487, 
	  494,   123,   124,   499,   498,   493,   575,   576, 
	  577,   578,   581,   582,   586,   579,   587,   594, 
	  599,   598,   600,   601,   602,   603,   606,   607, 
	  611,   604,   612,   619,   624,   623,   618,   593, 
	    0,     1,     3,     6,    11,    18,    25,    26, 
	   28,    31,    36,    43,    50,    51,    53,    56, 
	   61,    68,    75,    76,    78,    81,    86,    93, 
	  150,   151,   153,   156,   161,   168,   175,   176, 
	  178,   181,   186,   193,   275,   276,   278,   281, 
	  286,   293,   300,   301,   303,   306,   311,   318, 
	  450,   451,   453,   456,   461,   468,    23,    48, 
	   73,    98,   173,   198,   298,   323,   473,   100, 
	  101,   103,   106,   111,   118,   475,   476,   478, 
	  481,   486,   493,   123,   498,   575,   576,   578, 
	  581,   586,   593,   598,   600,   601,   603,   606, 
	  611,   618,   623,     0,     1,     2,     3,     6, 
	    7,    18,    25,    26,    27,    28,    31,    32, 
	   43,    50,    51,    52,    53,    56,    57,    68, 
	   75,    76,    77,    78,    81,    82,    93,   150, 
	  151,   152,   153,   156,   157,   168,   175,   176, 
	  177,   178,   181,   182,   193,   275,   276,   277, 
	  278,   281,   282,   293,   300,   301,   306,   307, 
	  318,   450,   451,   456,   457,   468,     4,    19, 
	   29,    44,    54,    69,    79,    94,   154,   169, 
	  179,   194,   279,   294,   302,   319,   452,   469, 
	  304,   454,   100,   101,   102,   103,   106,   107, 
	  118,   303,   475,   476,   481,   482,   493,   104, 
	  119,   477,   494,   479,   478,   575,   576,   581, 
	  582,   593,   577,   594,   579,   600,   601,   606, 
	  607,   618,   602,   619,   604,   603,   578,     0, 
	    1,     2,     3,     6,     7,    11,    12,    18, 
	   25,    26,    27,    28,    31,    32,    36,    37, 
	   43,    75,    76,    77,    78,    81,    82,    86, 
	   87,    93,   150,   151,   152,   153,   156,   157, 
	  161,   162,   168,   275,   276,   277,   278,   281, 
	  282,   286,   287,   293,   450,   451,   452,   453, 
	  456,   457,   461,   462,   468,     4,    19,    29, 
	   44,    79,    94,   154,   169,   279,   294,   454, 
	  469,    23,    48,    98,   173,   298,   473,    24, 
	   49,    99,   174,   299,   474,   575,   576,   577, 
	  578,   581,   582,   586,   587,   593,   579,   594, 
	  598,   599,     0,     1,     2,     3,     6,     7, 
	   11,    12,    18,    25,    26,    27,    28,    31, 
	   32,    36,    37,    43,    50,    51,    52,    53, 
	   56,    57,    61,    75,    76,    77,    78,    81, 
	   82,    86,   150,   151,   152,   153,   156,   157, 
	  161,   162,   168,   175,   176,   177,   178,   181, 
	  182,   186,   187,   193,   450,   451,   452,   453, 
	  456,   457,   461,   462,   468,     4,    19,    29, 
	   44,    54,    62,    79,    87,   154,   169,   179, 
	  194,   454,   469,    69,    94,    23,    48,   173, 
	  198,   473,    24,    49,   174,   199,   474,    74, 
	   99,    73,    98,    68,   100,   101,   102,   103, 
	  106,   107,   111,   475,   476,   477,   478,   481, 
	  482,   486,   487,   493,   104,   112,   479,   494, 
	  119,   498,   499,   124,   123,   118,     0,     1, 
	    2,     3,     6,     7,    18,    25,    26,    27, 
	   28,    31,    32,    43,    50,    51,    56,    57, 
	   68,    75,    76,    81,    82,    93,   150,   151, 
	  152,   153,   156,   157,   168,   175,   176,   177, 
	  178,   181,   182,   193,   450,   451,   452,   453, 
	  456,   457,   468,     4,    19,    29,    44,    52, 
	   69,    77,    94,   154,   169,   179,   194,   454, 
	  469,    54,    79,    53,   100,   101,   106,   107, 
	  118,   475,   476,   477,   478,   481,   482,   493, 
	  102,   119,   479,   494,   104,   103, 
};

static long _vq_fitmap_res_Ac_1024_4[] = {
	    0,   168,   259,   168,   375,   168,   375,   168, 
	  466,   168,   582,   168,   375,   168,   375,   168, 
};

static long _vq_fitlength_res_Ac_1024_4[] = {
	  168,    91,   116,    91,    91,    91,    91,    91, 
	  116,    91,    80,    91,    91,    91,    91,    91, 
};

static encode_aux_pigeonhole _vq_auxp_res_Ac_1024_4 = {
	-2, 1, 4, 2,
	_vq_pigeonmap_res_Ac_1024_4,
	662,
	_vq_fitlist_res_Ac_1024_4,
	_vq_fitmap_res_Ac_1024_4,
	_vq_fitlength_res_Ac_1024_4
};

static static_codebook _vq_book_res_Ac_1024_4 = {
	4, 625,
	_vq_lengthlist_res_Ac_1024_4,
	1, -533725184, 1611661312, 3, 0,
	_vq_quantlist_res_Ac_1024_4,
	NULL,
	&_vq_auxt_res_Ac_1024_4,
	&_vq_auxp_res_Ac_1024_4,
	0
};


#endif
